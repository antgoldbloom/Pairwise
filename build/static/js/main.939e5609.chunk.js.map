{"version":3,"sources":["components/leaderboard.js","components/option_form.js","components/pair.js","components/buttons.js","components/navbar.js","App.js","serviceWorker.js","index.js"],"names":["Leaderboard","props","vals","this","options","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","Object","keys","map","option","key","scope","mu","toFixed","sigma","className","value","onClick","React","Component","OptionForm","ta_options_error","Alert","severity","onSubmit","name","rows","cols","options_textarea","placeholder","onChange","onChangeValue","option_count","Button","color","type","variant","FormControl","InputLabel","inputLabel","htmlFor","Select","onSelect","native","option_prefill","labelWidth","inputProps","id","Pair","first_pair","ButtonGroup","size","pair","Buttons","style","minWidth","leaderboardShown","Navbar","AppBar","position","Toolbar","Typography","href","App","handleSubmit","event","preventDefault","options_1d","target","ta_options","split","index","indexOf","splice","options_tmp","i","length","Rating","pair_tmp","getRandomPair","setState","options_submitted","handleChange","ta_options_error_tmp","validateOptions","handleChoice","not_chosen","state","chosen","drawn","rate_1vs1","orderleaderboard","console","log","handleDelete","handleSelect","prefill","options_boy","join","options_vacation","options_netflix","option_prefill_tmp","handleButton","currentTarget","leaderboardShown_tmp","findDuplicates","arr","sorted_arr","slice","sort","results","push","bind","temp","shuffled","Math","floor","random","leaderboard_dict","items","first","second","option_tmp_return","eventValue","duplicate_options","concat","option_value","handlePrefill","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.939e5609.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nexport default class Leaderboard extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  \n    render() {\n\n      const vals = this.props.options;\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>&nbsp;</TableCell>\n            <TableCell align=\"right\">Mu</TableCell>\n            <TableCell align=\"right\">Sigma</TableCell>\n            <TableCell align=\"right\">Prune</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n        {Object.keys(this.props.options).map(option => ( \n            <TableRow key={option}>\n              <TableCell component=\"th\" scope=\"row\">\n                {option}\n              </TableCell>\n              <TableCell align=\"right\">{vals[option].mu.toFixed(1)}</TableCell>\n              <TableCell align=\"right\">{vals[option].sigma.toFixed(1)}</TableCell>\n              <TableCell align=\"right\"><button className=\"delete\" value={option} onClick={this.props.onClick}>x</button> </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n    )\n    \n        } \n  }","import React from 'react';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport Button from '@material-ui/core/Button';\nimport Alert from '@material-ui/lab/Alert';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nexport default class OptionForm extends React.Component {\n    constructor(props) {\n        super(props);\n\n\n\n    }\n\n\n      \n\n    render() {\n\n\n      \n        \n        return (\n                \n            <div>\n    {this.props.ta_options_error === '' ? <Alert severity=\"info\">Add one option per line.</Alert> : <Alert severity=\"warning\">{this.props.ta_options_error}   </Alert>}\n                <p>\n                <form onSubmit={this.props.onSubmit}>\n                    <textarea className=\"ta_options\" name=\"ta_options\" rows=\"15\" cols=\"30\" value={this.props.options_textarea} placeholder=\"This app aims to simplify decisions by breaking them down into many comparisons between two choices. After you've made enough comparisons, you will get Trueskill rankings that will help you make the final decision.\" onChange={this.props.onChangeValue}></textarea>\n                    {this.props.option_count > 3 ? \n                        <div><Button color=\"primary\" type=\"submit\" variant=\"contained\">Submit</Button></div>  : <div></div> }\n                    \n                </form>\n                </p>\n    \n                <p>\n\n                <FormControl variant=\"outlined\">\n        <InputLabel inputLabel={this.inputLabel} htmlFor=\"outlined-age-native-simple\">\n        Prefilled Options\n        </InputLabel>\n        <Select\n          onChange={this.props.onSelect}\n          native\n          value={this.props.option_prefill}\n          labelWidth={120}\n          inputProps={{\n            name: 'prefilled',\n            id: 'outlined-age-native-simple',\n          }}\n        >\n                        <option value=\"none\">Select Prefilled Option</option>\n                        <option value=\"babyboy\">Top 50 Boys' Names</option>\n                        <option value=\"vacation\">European Vacation</option>\n                        <option value=\"netflix\">Series on Netflix</option>\n                        </Select>\n                        </FormControl>\n            </p>\n\n            </div>\n            \n            )\n\n    }\n\n}","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Alert from '@material-ui/lab/Alert';\n\nexport default class Pair extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  \n    render() {\n      \n      return (\n      \n      \n        <div>\n        {this.props.first_pair === false ? <div></div> : <Alert severity=\"info\">Choose between the options or pick the ¯\\_(ツ)_/¯ if you can't decide. The more selections you make the more accurate the rankings.</Alert> }\n\n        <div className=\"container\">\n          <div className=\"row\">\n            <ButtonGroup size=\"large\" color=\"primary\" aria-label=\"large outlined primary button group\">\n              <Button value={this.props.pair[0]} onClick={this.props.onClick}>{this.props.pair[0]}</Button>\n              <Button onClick={this.props.onClick} value=\"nochoice\">‾\\_(ツ)_/‾</Button>\n              <Button  value={this.props.pair[1]} onClick={this.props.onClick}>{this.props.pair[1]}</Button>\n            </ ButtonGroup>         \n          </div>\n        </div>\n        </div>\n      )\n    }\n  }","import React from 'react';\nimport Button from '@material-ui/core/Button';\n\n\n\nexport default class Buttons extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  \n\n\n\n    render() {\n      const style = {\n        minWidth: 150\n     }\n      return (\n\n        <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"left\">&nbsp;</div>\n          <div className=\"middle\">\n            <Button color=\"primary\" style={style} onClick={this.props.onClick} value=\"leaderboardToggle\">\n              {this.props.leaderboardShown ? \"Hide\" : \"Show\"} Rankings\n            </Button>\n          </div>\n          <div className=\"right\">&nbsp;</div>\n        </div>\n      </div>\n\n\n      )\n    }\n  }\n\n  /*            <Button style={style} onClick={this.props.onClick} value=\"reset\">Reset</Button>*/","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport App from '../App';\n\nexport default class Navbar extends React.Component {\n\n    render() {\n        return(\n            <div>\n                <AppBar position=\"static\">\n                    <Toolbar>\n                        <Typography variant=\"title\" color=\"inherit\">\n                            <a href=\"\" onClick={this.props.onClick} className=\"heading\">Pairwise Comparisons</a>\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n            </div>\n\n        )\n        \n\n    }\n\n}\n","import React from 'react';\nimport './App.css';\nimport { Rating, quality_1vs1, rate_1vs1 } from 'ts-trueskill';\n\nimport Leaderboard from \"./components/leaderboard\";\nimport OptionForm from \"./components/option_form\";\nimport Pair from \"./components/pair\";\nimport HideLeaderboard from \"./components/buttons\";\nimport Navbar from \"./components/navbar\";\n\n\nexport default class App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      options: [],\n      options_submitted: false,\n      pair: [],\n      leaderboardShown: true,\n      options_textarea: '',\n      options_boy: ['Liam','Noah','William','James','Oliver','Benjamin','Elijah','Lucas','Mason','Logan','Alexander','Ethan','Jacob','Michael','Daniel','Henry','Jackson','Sebastian','Aiden','Matthew','Samuel','David','Joseph','Carter','Owen','Wyatt','John','Jack','Luke','Jayden','Dylan','Grayson','Levi','Issac','Gabriel','Julian','Mateo','Anthony','Jaxon','Lincoln','Joshua','Christopher','Andrew','Theodore','Caleb','Ryan','Asher','Nathan','Thomas','Leo'],\n      \n\n      options_vacation: ['Paris','Rome','Venice','London','Barcelona','Florence','Vienna','Madrid','Prague','Istanbul','Milan','Amsterdam','Budapest','Munich','Athens','Berlin','Lisbon','Santorini','Seville','Moscow','Nice','Naples','Dubrovnik','Ediburgh','Saint Petersburg','Pisa','Granada','Frankfurt','Copenhagen','Stockholm','Salzburg','Zurich','Helsinki','Lucerne','Reykjavik','Mykonos','Mont Saint-Michel','Amalfi','Oslo','Dublin','Capri','Cologne','Split','Krakow','Lake Como','Crete','Malaga','Bratislava','Brussels','Riga','Heidelberg','Bruges','Valencia','Porto','Biarritz','Innsbruck','Gothenburg','San Sebastián','Sienna','Antwerp','Mostar','Veliko Tarnovo','Tallinn','Bordeaux','Lille','Tbilisi','Hamburg','Sardinia','Genoa','San Marino','Lucca','Bologna','Padua','Malta','Bucharest','Belgrade','Ljubljana','Majorca','Chernobyl','Lviv','Rotterdam','Corsica','Tarifa','Puglia','Geneva','Interlaken','Sicily','Paros'],\n      options_netflix: ['Messiah','Spinning Out','The Witcher','Happy!','Living With Yourself','The Crown','Queer Eye: We\\'re in Japan!','Derry Girls','Black Mirror','Atypical','Line of Duty','Star Trek: The Next Generation','Weeds','Sense8','Unbelievable','The Dark Crystal: Age of Resistance','The Spy','The People v. O.J. Simpson','Mindhunter','The Thick of It','Dark','Orange is the New Black','Neon Genesis Evangelion','Carter','Stranger Things','When They See Us','What/If','Special','Tuca and Bertie','The Assassination of Gianni Versace','One-Punch Man','Dogs','Russian Doll','The OA','Sex Education','The Last Kingdom','Dead Set','Orphan Black','BoJack Horseman','The Good Place','The Alienist','Manhunt: Unabomber','Travellers','Better Call Saul','The End of the F***ing World','Aggretsuko','American Vandal','GLOW'],\n\n      option_prefill: 'none',\n\n      ta_options_error: '',\n      option_count:  0, \n    };  \n      \n/*     this.handleChange = this.handleChange.bind(this);\n */    this.handleSubmit = this.handleSubmit.bind(this);\n\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    var options_1d = event.target.ta_options.value.split(\"\\n\");\n    \n    var index = options_1d.indexOf('');\n    if (index > -1) {\n      options_1d.splice(index, 1);\n    }\n    \n    const options_tmp = {}; \n    for (var i = 0; i < options_1d.length; i++) {     \n      options_tmp[options_1d[i]] = new Rating();\n    }  \n\n    const pair_tmp = this.getRandomPair(Object.keys(options_tmp));\n\n    this.setState({options: options_tmp, options_submitted: true, pair: pair_tmp },() => {\n    })\n  }\n\n  handleChange = event => {\n\n    const ta_options_error_tmp = this.validateOptions(event.target.value);\n\n    this.setState({options_textarea : event.target.value,ta_options_error: ta_options_error_tmp})\n  }\n\n  handleChoice = event => {\n\n    \n    let not_chosen = event.target.value === this.state.pair[0] ? this.state.pair[1] : this.state.pair[0];\n    let chosen = event.target.value === this.state.pair[0] ? this.state.pair[0] : this.state.pair[1];\n    let drawn = event.target.value === 'nochoice'; \n\n    var options_tmp = this.state.options;\n\n    [options_tmp[chosen], options_tmp[not_chosen] ] = rate_1vs1(options_tmp[chosen], options_tmp[not_chosen],drawn);\n    options_tmp = this.orderleaderboard(options_tmp);\n\n    const pair_tmp = this.getRandomPair(Object.keys(options_tmp));\n    this.setState({pair: pair_tmp, options: options_tmp  },() => {\n      console.log(options_tmp);\n    })\n  }\n\n\n  handleDelete = event => {\n    \n    var options_tmp = this.state.options;\n    delete options_tmp[event.target.value];\n\n\n    const pair_tmp = this.getRandomPair(Object.keys(options_tmp));\n    this.setState({pair: pair_tmp, options: options_tmp  },() => {});\n  }\n\n\n  handleSelect = event => {\n       console.log(event.target.value);\n\n    var prefill = '';\n    if (event.target.value === \"babyboy\") {\n      prefill = this.state.options_boy.join(\"\\r\\n\")\n    } else if (event.target.value === \"vacation\") {\n      prefill = this.state.options_vacation.join(\"\\r\\n\")\n    } else if (event.target.value === \"netflix\") {\n      prefill = this.state.options_netflix.join(\"\\r\\n\")\n    }  \n\n    const option_prefill_tmp = event.target.value;\n\n    const ta_options_error_tmp = this.validateOptions(prefill);\n\n    this.setState({option_prefill: option_prefill_tmp, options_textarea: prefill, ta_options_error: ta_options_error_tmp},() => {\n      //console.log(this.state.options)         \n    })\n  \n  }\n\n  handleButton = event => {\n\n    console.log(event.currentTarget.value);\n    if (event.currentTarget.value === 'leaderboardToggle') {\n      let leaderboardShown_tmp = this.state.leaderboardShown === true ? false : true;\n      this.setState({ leaderboardShown: leaderboardShown_tmp },() => {});\n      \n     \n    } else {\n      this.setState({ options: '',options_textarea: '', options_submitted: false, leaderboardShown: false },() => {\n      });\n\n      }\n\n  }\n\n  getRandomPair(arr) {\n    var shuffled = arr.slice(0), i = arr.length, temp, index;\n    while (i--) {\n        index = Math.floor((i + 1) * Math.random());\n        temp = shuffled[index];\n        shuffled[index] = shuffled[i];\n        shuffled[i] = temp;\n    }\n    return shuffled.slice(0, 2);\n  }\n\n  orderleaderboard(options_tmp) {\n    \n\n    var leaderboard_dict = {};\n    \n    for (var option in options_tmp) {\n      leaderboard_dict[option] = options_tmp[option].mu\n    }\n\n    var items = Object.keys(leaderboard_dict).map(function(key) {\n      return [key, leaderboard_dict[key]];\n    });\n    \n    // Sort the array based on the second element\n    items.sort(function(first , second) {\n      return second[1] - first[1];\n    });\n    \n    var option_tmp_return = {};\n    for (var option in items) {\n      \n      option_tmp_return[items[option][0]] = options_tmp[items[option][0]]\n    }\n\n    return option_tmp_return;\n  }\n\n  validateOptions(eventValue) {\n\n    const options_1d = eventValue.split(\"\\n\");\n    \n    const duplicate_options = this.findDuplicates(options_1d);\n    console.log(duplicate_options);\n    var ta_options_error_tmp  = '';\n    if (duplicate_options.length >  0) {\n      ta_options_error_tmp = \"The following options are duplicated: \".concat(duplicate_options.join(',')) \n    } else if (options_1d.length < 4) {\n      ta_options_error_tmp = 'Must add '.concat(5-options_1d.length, ' more options.')  ;\n    }\n\n    this.setState({option_count : options_1d.length})\n\n    \n    return ta_options_error_tmp\n  }\n\n  findDuplicates = (arr) => {\n    let sorted_arr = arr.slice().sort(); // You can define the comparing function here. \n    let results = [];\n    for (let i = 0; i < sorted_arr.length - 1; i++) {\n      if (sorted_arr[i + 1] == sorted_arr[i]) {\n        results.push(sorted_arr[i]);\n      }\n    }\n    return results;\n  }\n\n\n  render() {\n\n    if (this.state.options_submitted === true) {\n      return (\n\n        <div className=\"App\">\n              <Navbar onClick={this.handleButton} />\n\n              <Pair pair={this.state.pair} onClick={this.handleChoice}/>\n              <HideLeaderboard leaderboardShown={this.state.leaderboardShown} onClick={this.handleButton}/>\n              {this.state.leaderboardShown ? <Leaderboard options={this.state.options} onClick={this.handleDelete} /> : <div></div>}\n\n\n        </div>\n      )\n    } else {\n      return (\n        <div className=\"App\">\n          <Navbar />\n\n          <OptionForm option_value={this.state.option_prefill} option_count={this.state.option_count} ta_options_error={this.state.ta_options_error} options_textarea={this.state.options_textarea} onClick={this.handlePrefill} onChangeValue={this.handleChange} onSubmit={this.handleSubmit} onSelect={this.handleSelect}/>\n        </div>\n      )\n    }\n  }\n\n\n}\n\n\n/*\n\n  resetOptions = async () => {\n    \n    const location = window.location.hostname;\n    const response = await fetch(`http://${location}:5000/reset_options`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({  }),\n    })\n    setPair({option:'empty'});\n\n  }\n\n  postChoice = async (chosen) => {\n\n    var drawn = \"False\";\n    if (chosen === \"nochoice\") {\n      drawn = \"True\";\n      chosen = pair.choice1\n    } \n\n    var not_chosen = pair.choice1;\n    if (pair.choice1 === chosen) {\n      not_chosen = pair.choice2;\n    } \n\n    const choice = {'chosen': chosen, 'not_chosen' : not_chosen,\"drawn\":drawn};\n\n    const location = window.location.hostname;\n    const response = await fetch(`http://${location}:5000/set_choice`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ choice }),\n    })\n    setLeaderboardShown(false)\n    \n  }\n\n  getPair = async () => {\n    const location = window.location.hostname;\n    const response = await fetch(`http://${location}:5000/get_options`);\n    const data = await response.json();\n    console.log(data)\n\n    setPair(data);\n    \n  }\n\n\n)\n */\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}