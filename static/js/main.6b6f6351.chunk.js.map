{"version":3,"sources":["components/leaderboard.js","components/option_form.js","components/pair.js","components/buttons.js","App.js","serviceWorker.js","index.js"],"names":["Leaderboard","props","vals","this","options","className","Object","keys","map","option","mu","toFixed","sigma","value","onClick","React","Component","OptionForm","onSubmit","name","rows","cols","options_textarea","onChange","onChangeValue","Pair","pair","Buttons","leaderboardShown","App","handleSubmit","event","preventDefault","options_1d","target","ta_options","split","options_tmp","i","length","Rating","pair_tmp","getRandomPair","setState","options_submitted","handleChange","handleChoice","not_chosen","state","chosen","drawn","rate_1vs1","orderleaderboard","console","log","handleDelete","handlePrefill","prefill","options_baby","join","options_vacation","handleButton","leaderboardShown_tmp","bind","arr","temp","index","shuffled","slice","Math","floor","random","leaderboard_dict","items","key","sort","first","second","option_tmp_return","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6b6f6351.chunk.js","sourcesContent":["import React from 'react';\n\n\nexport default class Leaderboard extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  \n    render() {\n\n      const vals = this.props.options;\n      \n\n      return (\n\n          <div className=\"leaderboard_container\">\n            <div className=\"heading\">\n        \n              <div className=\"leaderboard_cell\">&nbsp;</div><div className=\"leaderboard_cell\">mu</div><div className=\"leaderboard_cell\">sigma</div><div className=\"leaderboard_cell\">prune</div>\n            </div>\n            {Object.keys(this.props.options).map(option => ( \n              <div className=\"row\">\n                <div className=\"leaderboard_cell\">{option}</div>\n                <div className=\"leaderboard_cell\">{vals[option].mu.toFixed(1)}</div>\n                <div className=\"leaderboard_cell\">{vals[option].sigma.toFixed(1)}</div>\n                <div className=\"leaderboard_cell\"> <button className=\"delete\" value={option} onClick={this.props.onClick}>x</button> </div>\n                  \n              </div>\n            ))}\n          </div>\n        \n        )\n      }\n    \n    \n  }","import React from 'react';\n\n\nexport default class OptionForm extends React.Component {\n    constructor(props) {\n        super(props);\n        \n    }\n\n\n\n    render() {\n\n            return (\n                \n            <div className=\"container\">\n                <h3>Prefilled selections</h3>\n                <button onClick={this.props.onClick} value=\"vacation\">European Vacation</button>\n                <button onClick={this.props.onClick} value=\"baby\">Baby Boy's Name</button>\n                    <h3>Add your own options</h3>\n                <p>One per line</p>\n                <form onSubmit={this.props.onSubmit}>\n                    <textarea name=\"ta_options\" rows=\"30\" cols=\"30\" value={this.props.options_textarea} onChange={this.props.onChangeValue}></textarea>\n                    <p><button>Submit</button></p>\n                </form>\n            </div>\n            \n            )\n\n    }\n\n}","import React from 'react';\n\nexport default class Pair extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  \n    render() {\n      return (\n\n        <div className=\"container\">\n          <div className=\"row\">\n            \n              <div className=\"left\"><button className=\"choice\" value={this.props.pair[0]} onClick={this.props.onClick}>{this.props.pair[0]}</button></div>\n              <div className=\"middle\">&nbsp;</div>\n              <div className=\"right\"><button className=\"choice\" value={this.props.pair[1]} onClick={this.props.onClick}>{this.props.pair[1]}</button></div>\n          </div>\n          <div className=\"row\">\n            <div className=\"left\">&nbsp;</div>\n            <div className=\"middle\"><button onClick={this.props.onClick} value=\"nochoice\">‾\\_(ツ)_/‾</button></div>\n            <div className=\"right\">&nbsp;</div>\n          </div>\n        </div>\n      )\n    }\n  }","import React from 'react';\n\nexport default class Buttons extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  \n    render() {\n      return (\n\n        <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"left\">&nbsp;</div>\n          <div className=\"middle\">\n            <button onClick={this.props.onClick} value=\"leaderboardToggle\">\n              {this.props.leaderboardShown ? \"Hide\" : \"Show\"} Rankings\n            </button>\n            <button onClick={this.props.onClick} value=\"reset\">Reset</button>\n          </div>\n          <div className=\"right\">&nbsp;</div>\n        </div>\n      </div>\n\n\n      )\n    }\n  }","import React from 'react';\nimport './App.css';\nimport { Rating, quality_1vs1, rate_1vs1 } from 'ts-trueskill';\n\nimport Leaderboard from \"./components/leaderboard\";\nimport OptionForm from \"./components/option_form\";\nimport Pair from \"./components/pair\";\nimport HideLeaderboard from \"./components/buttons\";\n\n\n\nexport default class App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      options: [],\n      options_submitted: false,\n      pair: [],\n      leaderboardShown: false,\n      options_textarea: '',\n      options_vacation: ['Paris','Rome','Venice','London','Barcelona','Florence','Vienna','Madrid','Prague','Istanbul','Milan','Amsterdam','Budapest','Munich','Athens','Berlin','Lisbon','Santorini','Seville','Moscow','Nice','Naples','Dubrovnik','Ediburgh','Saint Petersburg','Pisa','Granada','Frankfurt','Copenhagen','Stockholm','Salzburg','Zurich','Porto','Helsinki','Lucerne','Reykjavik','Mykonos','Mont Saint-Michel','Amalfi','Oslo','Dublin','Capri','Cologne','Split','Krakow','Lake Como','Crete','Malaga','Bratislava','Brussels','Riga','Heidelberg','Bruges','Valencia','Porto','Biarritz','Innsbruck','Gothenburg','San Sebastián','Sienna','Antwerp','Mostar','Veliko Tarnovo','Tallinn','Bordeaux','Lille','Tbilisi','Hamburg','Sardinia','Genoa','San Marino','Lucca','Bologna','Padua','Malta','Bucharest','Belgrade','Ljubljana','Majorca','Chernobyl','Lviv','Rotterdam','Corsica','Tarifa','Puglia','Geneva','Interlaken','Sicily','Paros'],\n      options_baby: ['Harry','Max','Marcus','Arnold','Isaac','Nethaniel','Julien','Arnaud','Colin']\n\n    };  \n      \n/*     this.handleChange = this.handleChange.bind(this);\n */    this.handleSubmit = this.handleSubmit.bind(this);\n\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n    \n    const options_1d = event.target.ta_options.value.split(\"\\n\");\n    const options_tmp = {}; \n    for (var i = 0; i < options_1d.length; i++) {     \n      options_tmp[options_1d[i]] = new Rating();\n    }  \n\n    const pair_tmp = this.getRandomPair(Object.keys(options_tmp));\n\n    this.setState({options: options_tmp, options_submitted: true, pair: pair_tmp },() => {\n    })\n  }\n\n  handleChange = event => {\n    this.setState({options_textarea : event.target.value})\n  }\n\n  handleChoice = event => {\n\n    \n    let not_chosen = event.target.value === this.state.pair[0] ? this.state.pair[1] : this.state.pair[0];\n    let chosen = event.target.value === this.state.pair[0] ? this.state.pair[0] : this.state.pair[1];\n    let drawn = event.target.value === 'nochoice'; \n\n    var options_tmp = this.state.options;\n\n    [options_tmp[chosen], options_tmp[not_chosen] ] = rate_1vs1(options_tmp[chosen], options_tmp[not_chosen],drawn);\n    options_tmp = this.orderleaderboard(options_tmp);\n\n    const pair_tmp = this.getRandomPair(Object.keys(options_tmp));\n    this.setState({pair: pair_tmp, options: options_tmp  },() => {\n      console.log(options_tmp);\n    })\n  }\n\n\n  handleDelete = event => {\n    \n    var options_tmp = this.state.options;\n    delete options_tmp[event.target.value];\n\n\n    const pair_tmp = this.getRandomPair(Object.keys(options_tmp));\n    this.setState({pair: pair_tmp, options: options_tmp  },() => {});\n  }\n\n  handlePrefill = event => {\n\n    var prefill = ''\n    if (event.target.value == \"baby\") {\n      prefill = this.state.options_baby.join(\"\\r\\n\")\n    } else if (event.target.value == \"vacation\") {\n      prefill = this.state.options_vacation.join(\"\\r\\n\")\n    }\n\n    this.setState({ options_textarea: prefill },() => {\n      //console.log(this.state.options)         \n    })\n\n  }\n\n  handleButton = event => {\n\n    console.log(event.target.value);\n    if (event.target.value === 'reset'){\n      \n      this.setState({ options: '',options_textarea: '', options_submitted: false, leaderboardShown: false },() => {\n      });\n    } else {\n      let leaderboardShown_tmp = this.state.leaderboardShown === true ? false : true;\n      this.setState({ leaderboardShown: leaderboardShown_tmp },() => {});\n    }\n\n  }\n\n  getRandomPair(arr) {\n    var shuffled = arr.slice(0), i = arr.length, temp, index;\n    while (i--) {\n        index = Math.floor((i + 1) * Math.random());\n        temp = shuffled[index];\n        shuffled[index] = shuffled[i];\n        shuffled[i] = temp;\n    }\n    return shuffled.slice(0, 2);\n  }\n\n  orderleaderboard(options_tmp) {\n    \n\n    var leaderboard_dict = {};\n    \n    for (var option in options_tmp) {\n      leaderboard_dict[option] = options_tmp[option].mu\n    }\n\n    var items = Object.keys(leaderboard_dict).map(function(key) {\n      return [key, leaderboard_dict[key]];\n    });\n    \n    // Sort the array based on the second element\n    items.sort(function(first , second) {\n      return second[1] - first[1];\n    });\n    \n    var option_tmp_return = {};\n    for (var option in items) {\n      \n      option_tmp_return[items[option][0]] = options_tmp[items[option][0]]\n    }\n\n    return option_tmp_return;\n  }\n\n\n  render() {\n\n    if (this.state.options_submitted === true) {\n      return (\n        <div className=\"App\">\n            <Pair pair={this.state.pair} onClick={this.handleChoice}/>\n            <HideLeaderboard leaderboardShown={this.state.leaderboardShown} onClick={this.handleButton}/>\n            {this.state.leaderboardShown ? <Leaderboard options={this.state.options} onClick={this.handleDelete} /> : <div></div>}\n\n\n        </div>\n      )\n    } else {\n      return (\n        <div className=\"App\">\n          <OptionForm options_textarea={this.state.options_textarea} onClick={this.handlePrefill} onChangeValue={this.handleChange} onSubmit={this.handleSubmit}/>\n        </div>\n      )\n    }\n  }\n\n\n}\n\n\n/*\n\n  resetOptions = async () => {\n    \n    const location = window.location.hostname;\n    const response = await fetch(`http://${location}:5000/reset_options`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({  }),\n    })\n    setPair({option:'empty'});\n\n  }\n\n  postChoice = async (chosen) => {\n\n    var drawn = \"False\";\n    if (chosen === \"nochoice\") {\n      drawn = \"True\";\n      chosen = pair.choice1\n    } \n\n    var not_chosen = pair.choice1;\n    if (pair.choice1 === chosen) {\n      not_chosen = pair.choice2;\n    } \n\n    const choice = {'chosen': chosen, 'not_chosen' : not_chosen,\"drawn\":drawn};\n\n    const location = window.location.hostname;\n    const response = await fetch(`http://${location}:5000/set_choice`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ choice }),\n    })\n    setLeaderboardShown(false)\n    \n  }\n\n  getPair = async () => {\n    const location = window.location.hostname;\n    const response = await fetch(`http://${location}:5000/get_options`);\n    const data = await response.json();\n    console.log(data)\n\n    setPair(data);\n    \n  }\n\n\n)\n */\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}